#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

//#define INT_MAX 2000000000

long long int functn (long long int temp)  // similar to greedy Coin-change
{
    long long int x=0;
    if(temp>=5)
    {
        x = temp/5;
        temp = temp%5;
    }
    if(temp>=2)
    {
        x += temp/2;
        temp = temp%2;
    }
    x += temp;
    return x;
    
}
    
int array_smallest(long long int array[],int array_length)
{
    long long int smallest = INT_MAX;
    long long int i;
    for (i = 0; i < array_length; i++)
    {
        if (array[i] < smallest) {
            smallest = array[i];
        }
    }
    return smallest;
}
    
long long int mod(long long int x)
{
    if(x>0)
        return x;
    else
        return (-1)*x;
}

int equal(int arr_size, int* arr) {
    // Complete this function
    int i,j;
    long long int min,temp;
    min = 1000000;
    for(i=0;i<arr_size;i++)
    {
        if(arr[i]<min)
            min = arr[i];
    }
    long long int sum[6];
        for(j=0 ; j<=5 ; j++)
        {
            sum[j]=0;
            for(i=0 ; i< arr_size ; i++)
            {
                temp = arr[i] - (min-j);
                sum[j] = sum[j] + functn(temp);
            }
        }
    return array_smallest(sum,6);
}

int main() {
    int t; 
    scanf("%i", &t);
    for(int a0 = 0; a0 < t; a0++){
        int n; 
        scanf("%i", &n);
        int *arr = malloc(sizeof(int) * n);
        for (int arr_i = 0; arr_i < n; arr_i++) {
           scanf("%i",&arr[arr_i]);
        }
        int result = equal(n, arr);
        printf("%d\n", result);
    }
    return 0;
}
